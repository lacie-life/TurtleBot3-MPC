<launch>
    <!--  ************** Global Parameters ***************  -->
    <param name="use_sim_time" value="true"/>
    <arg name="controller"  default="pure_pursuit" doc="opt: dwa, mpc, pure_pursuit"/> 
    <arg name="model"  default="turtlebot3_burger" doc="opt: serving_bot"/> 
    <arg name="trajectory_type"  default="epitrochoid" doc="opt: circle, epitrochoid, square, infinite"/> 
    <arg name="gui" default="false"/>
    

    <!--  ************** GAZEBO Simulator ***************  -->
    <arg name="z_pos" default="0.0"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <!--  ************** circle ***************  -->
    <arg name="x_pos" default="0.0" if="$(eval trajectory_type == 'circle')" />
    <arg name="y_pos" default="-5.0" if="$(eval trajectory_type == 'circle')" />
    <arg name="yaw" default="0" if="$(eval trajectory_type == 'circle')" />
    <!--  ************** epitrochoid ***************-->
    <arg name="x_pos" default="3.0"  if="$(eval trajectory_type == 'epitrochoid')" />
    <arg name="y_pos" default="0.01" if="$(eval trajectory_type == 'epitrochoid')"/>
    <arg name="yaw" default="-1.57" if="$(eval trajectory_type == 'epitrochoid')"/>
    <!--  ************** square *************** -->
    <arg name="x_pos" default="0.0" if="$(eval trajectory_type == 'square')"/>
    <arg name="y_pos" default="0.0" if="$(eval trajectory_type == 'square')"/>
    <arg name="yaw" default="1.57075" if="$(eval trajectory_type == 'square')"/>
    <!--  ************** infinite ***************-->
    <arg name="x_pos" default="10.0" if="$(eval trajectory_type == 'infinite')"/>
    <arg name="y_pos" default="0.0"  if="$(eval trajectory_type == 'infinite')"/>
    <arg name="yaw" default="1.57075"  if="$(eval trajectory_type == 'infinite')"/>

    <!--  ************** Robot model ***************  -->
    <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" if="$(eval model == 'turtlebot3_burger')"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find gazebo_ros)/launch/empty_world.launch"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -param robot_description" />
     
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!--  ************** Reference trajectory generation **************  -->
    <node name="mpc_trajectory_generation" pkg="mpc_ros" type="mpc_trajectory_generation.py"  if="$(eval controller == 'mpc')">
        <param name="trajectory_type" value="$(arg trajectory_type)" />
    </node>
    <node name="pure_pursuit_trajectory_generation" pkg="mpc_ros" type="mpc_trajectory_generation.py"  if="$(eval controller == 'pure_pursuit')">
        <param name="trajectory_type" value="$(arg trajectory_type)" />
    </node>

    <!--  ************** MPC Node **************  -->
    <node name="MPC_tracking" pkg="mpc_ros" type="tracking_reference_trajectory" output="screen" if="$(eval controller == 'mpc')" >
        <rosparam file="$(find mpc_ros)/params/mpc_params.yaml" command="load" />
        <!--rosparam file="$(find mpc_ros)/params/mpc_local_params.yaml" command="load" /-->
        <!--rosparam file="$(find mpc_ros)//params/mpc_local_epitrochoid_params.yaml" command="load" /-->
    </node>

     <!--  ************** Pure Pursuit Node **************  -->
    <node name="Pure_Pursuit_tracking" pkg="mpc_ros" type="Pure_Pursuit" output="screen" if="$(eval controller == 'pure_pursuit')" >
        <rosparam file="$(find mpc_ros)/params/pure_pursuit_params.yaml" command="load" />
        <!--rosparam file="$(find mpc_ros)/params/mpc_local_params.yaml" command="load" /-->
        <!--rosparam file="$(find mpc_ros)//params/mpc_local_epitrochoid_params.yaml" command="load" /-->
    </node>

    <!--  ************** Visualisation **************  -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mpc_ros)/rviz/rviz_navigation.rviz"/>

</launch>
